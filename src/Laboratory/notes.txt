def e(char: str, space: str = "/"):
    MorseCode = { 'A':'.- ', 'B':'-... ', 'C':'-.-. ', 'D':'-.. ', 'E':'. ', 'F':'..-. ', 'G':'--. ', 'H':'.... ', 'I':'.. ', 'J':'.--- ', 'K':'-.- ', 'L':'.-.. ', 'M':'-- ', 'N':'-. ', 'O':'--- ', 'P':'.--. ', 'Q':'--.- ', 'R':'.-. ', 'S':'... ', 'T':'- ', 'U':'..- ', 'V':'...- ', 'W':'.-- ', 'X':'-..- ', 'Y':'-.-- ', 'Z':'--.. ', ' ': f'{space} ', '1':'.---- ', '2':'..--- ', '3':'...-- ', '4':'....- ', '5':'..... ', '6':'-.... ', '7':'--... ', '8':'---.. ', '9':'----. ', '0':'----- ', ',':'--..-- ', '.':'.-.-.- ', '?':'..--.. ', '-':'-....- ', '(':'-.--. ', ')':'-.--.- ', '\"' : '.-..-. ', '\'' : '.----. '}
    return char.upper().translate(str.maketrans(MorseCode))

print(e("Hello World This is 'Monty Python'"))

def d(char: str):
    MorseCode = { 'A':'.- ', 'B':'-... ', 'C':'-.-. ', 'D':'-.. ', 'E':'. ', 'F':'..-. ', 'G':'--. ', 'H':'.... ', 'I':'.. ', 'J':'.--- ', 'K':'-.- ', 'L':'.-.. ', 'M':'-- ', 'N':'-. ', 'O':'--- ', 'P':'.--. ', 'Q':'--.- ', 'R':'.-. ', 'S':'... ', 'T':'- ', 'U':'..- ', 'V':'...- ', 'W':'.-- ', 'X':'-..- ', 'Y':'-.-- ', 'Z':'--.. ', ' ': f'/ ', '1':'.---- ', '2':'..--- ', '3':'...-- ', '4':'....- ', '5':'..... ', '6':'-.... ', '7':'--... ', '8':'---.. ', '9':'----. ', '0':'----- ', ',':'--..-- ', '.':'.-.-.- ', '?':'..--.. ', '-':'-....- ', '(':'-.--. ', ')':'-.--.- ', '\"' : '.-..-. ', '\'' : '.----. '}
    FormatMorse = {value : key for (key, value) in MorseCode.items()}

    return char.upper().translate(str.maketrans(FormatMorse))

print(d('.... . .-.. .-.. --- / .-- --- .-. .-.. -.. / - .... .. ... / .. ... / .----. -- --- -. - -.-- / .--. -.-- - .... --- -. .----.'))


class A1Z26():
    def encode(char: str):
        A1Z26 = []

        for i in char:
            if i.isalpha():
                A1Z26.append(str(ord(i.lower()) - 96))
            else:
                A1Z26.append(i)

        return " ".join(A1Z26)

    def decode(char: str):
        A1Z26 = []

        for i in char.split():
            A1Z26.append(chr(int(i) + 96))

        return "".join(A1Z26)

class Caesar():

    def encode(char: str, shift: int = 3):
        caesar = ""

        for i in range(len(char)):
            if char[i].isupper():
                caesar += chr((ord(char[i]) + shift - 65) % 26 + 65)

            elif char[i].islower():
                caesar += chr((ord(char[i]) + shift - 97) % 26 + 97)
            else:
                caesar += char[i]

        return caesar

    def decode(char: str, shift: int = 3):
        caesar = ""

        for i in range(len(char)):
            if char[i].isupper():
                caesar += chr((ord(char[i]) - shift - 65) % 26 + 65)

            elif char[i].islower():
                caesar += chr((ord(char[i]) - shift - 97) % 26 + 97)
            else:
                caesar += char[i]

        return caesar
